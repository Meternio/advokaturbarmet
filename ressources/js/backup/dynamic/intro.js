export class Intro{constructor(){this.body=document.body,this.parent=document.querySelector(".intro"),this.items=null,this.logo=null,this.title=null,this.header=document.querySelector(".menu__bar"),this.zIndex=1,this.index=1,this.delay=1800,this.animationDuration=1e3,this.intervalID=0,this.initialized=!1,this.interval=null}showImage(t){this.zIndex++,gsap.fromTo([t],{opacity:0},{opacity:1,duration:this.animationDuration/1e3}),t.style.zIndex=this.zIndex}animateLogo(t){t?gsap.fromTo([this.logo],{opacity:0},{opacity:1,duration:this.animationDuration/1e3}):gsap.fromTo([this.logo],{opacity:1},{opacity:0,duration:this.animationDuration/1e3})}async showHeader(){await delay(this.animationDuration/2),gsap.set([this.header],{opacity:0}),gsap.fromTo([this.header],{opacity:0},{opacity:1,duration:this.animationDuration/1e3}),gsap.fromTo([this.title],{opacity:0},{opacity:1,duration:this.animationDuration/1e3})}async init(){exists(this.parent)&&(this.items=this.parent.querySelectorAll(".item"),this.logo=this.parent.querySelector(".logo"),this.title=this.parent.querySelector(".intro__title"),await delay(1e3),this.initialized||this.animateLogo(!0),this.interval=rInterval((()=>{switch(this.showImage(this.items[this.index]),this.zIndex){case 3:this.initialized||(this.animateLogo(!1),this.initialized=!0),this.showHeader(),this.delay=2500,this.interval.clear(),this.header.removeAttribute("style"),this.interval=window.setInterval((()=>{this.body.classList.remove("has__intro"),this.showImage(this.items[this.index]),this.index=this.index+1>this.items.length-1?0:this.index+1}),this.delay)}this.index=this.index+1>this.items.length-1?0:this.index+1}),this.delay))}update(){"object"==typeof this.interval?this.interval.clear():window.clearInterval(this.interval),this.body=document.body,this.parent=document.querySelector(".intro"),this.items=null,this.logo=null,this.title=null,this.header=document.querySelector(".menu__bar"),this.zIndex=1,this.index=1,this.delay=1800,this.animationDuration=1e3,this.intervalID=0,this.rInterval=null,this.init()}}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImR5bmFtaWMvaW50cm8uanMiXSwibmFtZXMiOlsiSW50cm8iLCJbb2JqZWN0IE9iamVjdF0iLCJ0aGlzIiwiYm9keSIsImRvY3VtZW50IiwicGFyZW50IiwicXVlcnlTZWxlY3RvciIsIml0ZW1zIiwibG9nbyIsInRpdGxlIiwiaGVhZGVyIiwiekluZGV4IiwiaW5kZXgiLCJkZWxheSIsImFuaW1hdGlvbkR1cmF0aW9uIiwiaW50ZXJ2YWxJRCIsImluaXRpYWxpemVkIiwiaW50ZXJ2YWwiLCJpdGVtIiwiZ3NhcCIsImZyb21UbyIsIm9wYWNpdHkiLCJkdXJhdGlvbiIsInN0eWxlIiwic2hvdyIsInNldCIsImV4aXN0cyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJhbmltYXRlTG9nbyIsInJJbnRlcnZhbCIsInNob3dJbWFnZSIsInNob3dIZWFkZXIiLCJjbGVhciIsInJlbW92ZUF0dHJpYnV0ZSIsIndpbmRvdyIsInNldEludGVydmFsIiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwibGVuZ3RoIiwiY2xlYXJJbnRlcnZhbCIsImluaXQiXSwibWFwcGluZ3MiOiJPQUFPLE1BQU1BLE1BQ1RDLGNBQ0lDLEtBQUtDLEtBQU9DLFNBQVNELEtBQ3JCRCxLQUFLRyxPQUFTRCxTQUFTRSxjQUFjLFVBQ3JDSixLQUFLSyxNQUFRLEtBQ2JMLEtBQUtNLEtBQU8sS0FDWk4sS0FBS08sTUFBUSxLQUNiUCxLQUFLUSxPQUFTTixTQUFTRSxjQUFjLGNBRXJDSixLQUFLUyxPQUFTLEVBQ2RULEtBQUtVLE1BQVEsRUFDYlYsS0FBS1csTUFBUSxLQUNiWCxLQUFLWSxrQkFBb0IsSUFDekJaLEtBQUthLFdBQWEsRUFDbEJiLEtBQUtjLGFBQWMsRUFFbkJkLEtBQUtlLFNBQVcsS0FHcEJoQixVQUFVaUIsR0FDTmhCLEtBQUtTLFNBQ0xRLEtBQUtDLE9BQU8sQ0FBQ0YsR0FBTyxDQUFDRyxRQUFTLEdBQUksQ0FBQ0EsUUFBUyxFQUFHQyxTQUFVcEIsS0FBS1ksa0JBQW9CLE1BQ2xGSSxFQUFLSyxNQUFNWixPQUFTVCxLQUFLUyxPQUc3QlYsWUFBWXVCLEdBQ0pBLEVBQ0FMLEtBQUtDLE9BQU8sQ0FBQ2xCLEtBQUtNLE1BQU8sQ0FBQ2EsUUFBUyxHQUFJLENBQUNBLFFBQVMsRUFBR0MsU0FBVXBCLEtBQUtZLGtCQUFvQixNQUV2RkssS0FBS0MsT0FBTyxDQUFDbEIsS0FBS00sTUFBTyxDQUFDYSxRQUFTLEdBQUksQ0FBQ0EsUUFBUyxFQUFHQyxTQUFVcEIsS0FBS1ksa0JBQW9CLE1BSS9GYix5QkFDVVksTUFBTVgsS0FBS1ksa0JBQW9CLEdBQ3JDSyxLQUFLTSxJQUFJLENBQUN2QixLQUFLUSxRQUFTLENBQUNXLFFBQVMsSUFDbENGLEtBQUtDLE9BQU8sQ0FBQ2xCLEtBQUtRLFFBQVMsQ0FBQ1csUUFBUyxHQUFJLENBQUNBLFFBQVMsRUFBR0MsU0FBVXBCLEtBQUtZLGtCQUFvQixNQUN6RkssS0FBS0MsT0FBTyxDQUFDbEIsS0FBS08sT0FBUSxDQUFDWSxRQUFTLEdBQUksQ0FBQ0EsUUFBUyxFQUFHQyxTQUFVcEIsS0FBS1ksa0JBQW9CLE1BRzVGYixhQUNReUIsT0FBT3hCLEtBQUtHLFVBRVpILEtBQUtLLE1BQVFMLEtBQUtHLE9BQU9zQixpQkFBaUIsU0FDMUN6QixLQUFLTSxLQUFPTixLQUFLRyxPQUFPQyxjQUFjLFNBQ3RDSixLQUFLTyxNQUFRUCxLQUFLRyxPQUFPQyxjQUFjLHVCQUVqQ08sTUFBTSxLQUVSWCxLQUFLYyxhQUNMZCxLQUFLMEIsYUFBWSxHQUdyQjFCLEtBQUtlLFNBQVdZLFdBQVUsS0FHdEIsT0FGQTNCLEtBQUs0QixVQUFVNUIsS0FBS0ssTUFBTUwsS0FBS1UsUUFFdkJWLEtBQUtTLFFBQ1QsS0FBSyxFQUNHVCxLQUFLYyxjQUNMZCxLQUFLMEIsYUFBWSxHQUNqQjFCLEtBQUtjLGFBQWMsR0FHdkJkLEtBQUs2QixhQUNMN0IsS0FBS1csTUFBUSxLQUNiWCxLQUFLZSxTQUFTZSxRQUNkOUIsS0FBS1EsT0FBT3VCLGdCQUFnQixTQUU1Qi9CLEtBQUtlLFNBQVdpQixPQUFPQyxhQUFZLEtBQy9CakMsS0FBS0MsS0FBS2lDLFVBQVVDLE9BQU8sY0FDM0JuQyxLQUFLNEIsVUFBVTVCLEtBQUtLLE1BQU1MLEtBQUtVLFFBQy9CVixLQUFLVSxNQUFRVixLQUFLVSxNQUFRLEVBQUlWLEtBQUtLLE1BQU0rQixPQUFTLEVBQUksRUFBSXBDLEtBQUtVLE1BQVEsSUFDeEVWLEtBQUtXLE9BTWhCWCxLQUFLVSxNQUFRVixLQUFLVSxNQUFRLEVBQUlWLEtBQUtLLE1BQU0rQixPQUFTLEVBQUksRUFBSXBDLEtBQUtVLE1BQVEsSUFDeEVWLEtBQUtXLFFBSWhCWixTQUNpQyxpQkFBbkJDLEtBQWEsU0FDbkJBLEtBQUtlLFNBQVNlLFFBRWRFLE9BQU9LLGNBQWNyQyxLQUFLZSxVQUU5QmYsS0FBS0MsS0FBT0MsU0FBU0QsS0FDckJELEtBQUtHLE9BQVNELFNBQVNFLGNBQWMsVUFDckNKLEtBQUtLLE1BQVEsS0FDYkwsS0FBS00sS0FBTyxLQUNaTixLQUFLTyxNQUFRLEtBQ2JQLEtBQUtRLE9BQVNOLFNBQVNFLGNBQWMsY0FFckNKLEtBQUtTLE9BQVMsRUFDZFQsS0FBS1UsTUFBUSxFQUNiVixLQUFLVyxNQUFRLEtBQ2JYLEtBQUtZLGtCQUFvQixJQUN6QlosS0FBS2EsV0FBYSxFQUVsQmIsS0FBSzJCLFVBQVksS0FFakIzQixLQUFLc0MiLCJmaWxlIjoiZHluYW1pYy9pbnRyby5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBJbnRybyB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuYm9keSA9IGRvY3VtZW50LmJvZHk7XG4gICAgICAgIHRoaXMucGFyZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmludHJvJyk7XG4gICAgICAgIHRoaXMuaXRlbXMgPSBudWxsO1xuICAgICAgICB0aGlzLmxvZ28gPSBudWxsO1xuICAgICAgICB0aGlzLnRpdGxlID0gbnVsbDtcbiAgICAgICAgdGhpcy5oZWFkZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWVudV9fYmFyJyk7XG5cbiAgICAgICAgdGhpcy56SW5kZXggPSAxO1xuICAgICAgICB0aGlzLmluZGV4ID0gMTtcbiAgICAgICAgdGhpcy5kZWxheSA9IDE4MDA7XG4gICAgICAgIHRoaXMuYW5pbWF0aW9uRHVyYXRpb24gPSAxMDAwO1xuICAgICAgICB0aGlzLmludGVydmFsSUQgPSAwO1xuICAgICAgICB0aGlzLmluaXRpYWxpemVkID0gZmFsc2U7XG5cbiAgICAgICAgdGhpcy5pbnRlcnZhbCA9IG51bGw7XG4gICAgfVxuXG4gICAgc2hvd0ltYWdlKGl0ZW0pIHtcbiAgICAgICAgdGhpcy56SW5kZXgrKztcbiAgICAgICAgZ3NhcC5mcm9tVG8oW2l0ZW1dLCB7b3BhY2l0eTogMH0sIHtvcGFjaXR5OiAxLCBkdXJhdGlvbjogdGhpcy5hbmltYXRpb25EdXJhdGlvbiAvIDEwMDB9KTtcbiAgICAgICAgaXRlbS5zdHlsZS56SW5kZXggPSB0aGlzLnpJbmRleDtcbiAgICB9XG5cbiAgICBhbmltYXRlTG9nbyhzaG93KSB7XG4gICAgICAgIGlmIChzaG93KSB7XG4gICAgICAgICAgICBnc2FwLmZyb21UbyhbdGhpcy5sb2dvXSwge29wYWNpdHk6IDB9LCB7b3BhY2l0eTogMSwgZHVyYXRpb246IHRoaXMuYW5pbWF0aW9uRHVyYXRpb24gLyAxMDAwfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBnc2FwLmZyb21UbyhbdGhpcy5sb2dvXSwge29wYWNpdHk6IDF9LCB7b3BhY2l0eTogMCwgZHVyYXRpb246IHRoaXMuYW5pbWF0aW9uRHVyYXRpb24gLyAxMDAwfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhc3luYyBzaG93SGVhZGVyKCkge1xuICAgICAgICBhd2FpdCBkZWxheSh0aGlzLmFuaW1hdGlvbkR1cmF0aW9uIC8gMik7XG4gICAgICAgIGdzYXAuc2V0KFt0aGlzLmhlYWRlcl0sIHtvcGFjaXR5OiAwfSk7XG4gICAgICAgIGdzYXAuZnJvbVRvKFt0aGlzLmhlYWRlcl0sIHtvcGFjaXR5OiAwfSwge29wYWNpdHk6IDEsIGR1cmF0aW9uOiB0aGlzLmFuaW1hdGlvbkR1cmF0aW9uIC8gMTAwMH0pO1xuICAgICAgICBnc2FwLmZyb21UbyhbdGhpcy50aXRsZV0sIHtvcGFjaXR5OiAwfSwge29wYWNpdHk6IDEsIGR1cmF0aW9uOiB0aGlzLmFuaW1hdGlvbkR1cmF0aW9uIC8gMTAwMH0pO1xuICAgIH1cblxuICAgIGFzeW5jIGluaXQoKSB7XG4gICAgICAgIGlmIChleGlzdHModGhpcy5wYXJlbnQpKSB7XG5cbiAgICAgICAgICAgIHRoaXMuaXRlbXMgPSB0aGlzLnBhcmVudC5xdWVyeVNlbGVjdG9yQWxsKCcuaXRlbScpO1xuICAgICAgICAgICAgdGhpcy5sb2dvID0gdGhpcy5wYXJlbnQucXVlcnlTZWxlY3RvcignLmxvZ28nKTtcbiAgICAgICAgICAgIHRoaXMudGl0bGUgPSB0aGlzLnBhcmVudC5xdWVyeVNlbGVjdG9yKCcuaW50cm9fX3RpdGxlJyk7XG5cbiAgICAgICAgICAgIGF3YWl0IGRlbGF5KDEwMDApO1xuXG4gICAgICAgICAgICBpZighdGhpcy5pbml0aWFsaXplZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuYW5pbWF0ZUxvZ28odHJ1ZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMuaW50ZXJ2YWwgPSBySW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuc2hvd0ltYWdlKHRoaXMuaXRlbXNbdGhpcy5pbmRleF0pO1xuXG4gICAgICAgICAgICAgICAgc3dpdGNoICh0aGlzLnpJbmRleCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgICAgICAgICAgICBpZighdGhpcy5pbml0aWFsaXplZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYW5pbWF0ZUxvZ28oZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dIZWFkZXIoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZGVsYXkgPSAyNTAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pbnRlcnZhbC5jbGVhcigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5oZWFkZXIucmVtb3ZlQXR0cmlidXRlKCdzdHlsZScpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmludGVydmFsID0gd2luZG93LnNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmJvZHkuY2xhc3NMaXN0LnJlbW92ZSgnaGFzX19pbnRybycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd0ltYWdlKHRoaXMuaXRlbXNbdGhpcy5pbmRleF0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaW5kZXggPSB0aGlzLmluZGV4ICsgMSA+IHRoaXMuaXRlbXMubGVuZ3RoIC0gMSA/IDAgOiB0aGlzLmluZGV4ICsgMTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIHRoaXMuZGVsYXkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB0aGlzLmluZGV4ID0gdGhpcy5pbmRleCArIDEgPiB0aGlzLml0ZW1zLmxlbmd0aCAtIDEgPyAwIDogdGhpcy5pbmRleCArIDE7XG4gICAgICAgICAgICB9LCB0aGlzLmRlbGF5KVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgdXBkYXRlKCkge1xuICAgICAgICBpZih0eXBlb2YodGhpcy5pbnRlcnZhbCkgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICB0aGlzLmludGVydmFsLmNsZWFyKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB3aW5kb3cuY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmJvZHkgPSBkb2N1bWVudC5ib2R5O1xuICAgICAgICB0aGlzLnBhcmVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5pbnRybycpO1xuICAgICAgICB0aGlzLml0ZW1zID0gbnVsbDtcbiAgICAgICAgdGhpcy5sb2dvID0gbnVsbDtcbiAgICAgICAgdGhpcy50aXRsZSA9IG51bGw7XG4gICAgICAgIHRoaXMuaGVhZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1lbnVfX2JhcicpO1xuXG4gICAgICAgIHRoaXMuekluZGV4ID0gMTtcbiAgICAgICAgdGhpcy5pbmRleCA9IDE7XG4gICAgICAgIHRoaXMuZGVsYXkgPSAxODAwO1xuICAgICAgICB0aGlzLmFuaW1hdGlvbkR1cmF0aW9uID0gMTAwMDtcbiAgICAgICAgdGhpcy5pbnRlcnZhbElEID0gMDtcblxuICAgICAgICB0aGlzLnJJbnRlcnZhbCA9IG51bGw7XG5cbiAgICAgICAgdGhpcy5pbml0KCk7XG4gICAgfVxufSJdfQ==
