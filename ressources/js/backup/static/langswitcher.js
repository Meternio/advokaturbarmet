export class LangSwitcher{constructor(){this.parent=document.querySelector(".navigation__lang"),this.menu=document.querySelector(".header__menu"),this.links=null,this.logoParent=document.querySelector(".header__bar"),this.logolink=document.querySelector(".header__logo").parentNode}init(){if(exists(this.parent)){this.links=this.parent.querySelectorAll("li");for(let e=0,t=this.links.length;e<t;e++)this.links[e].addEventListener(fastClick,(()=>{for(let e=0,t=this.links.length;e<t;e++)this.links[e].classList.remove("active");let t=this.links[e].querySelector("a").getAttribute("data-lang-id");this.links[e].classList.add("active"),ajax("getMenu="+t).then((e=>{let t=gsap.timeline({repeat:0});t.to([this.menu],{autoAlpha:0,duration:.35,ease:"Power3.easeOut"},"+=0.0"),t.add((()=>{this.menu.innerHTML=e})),t.to([this.menu],{autoAlpha:1,duration:.35,ease:"Power3.easeIn"},"+=0.0")})),ajax("getHeaderLogo="+t).then((e=>{this.logolink.remove(),this.logoParent.insertAdjacentHTML("afterbegin",e),this.logolink=document.querySelector(".header__logo").parentNode}))}))}}}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXRpYy9sYW5nc3dpdGNoZXIuanMiXSwibmFtZXMiOlsiTGFuZ1N3aXRjaGVyIiwiW29iamVjdCBPYmplY3RdIiwidGhpcyIsInBhcmVudCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIm1lbnUiLCJsaW5rcyIsImxvZ29QYXJlbnQiLCJsb2dvbGluayIsInBhcmVudE5vZGUiLCJleGlzdHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiaSIsImxlbiIsImxlbmd0aCIsImFkZEV2ZW50TGlzdGVuZXIiLCJmYXN0Q2xpY2siLCJ4IiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwibGFuZ0NvZGUiLCJnZXRBdHRyaWJ1dGUiLCJhZGQiLCJhamF4IiwidGhlbiIsImFuc3dlciIsInRsIiwiZ3NhcCIsInRpbWVsaW5lIiwicmVwZWF0IiwidG8iLCJhdXRvQWxwaGEiLCJkdXJhdGlvbiIsImVhc2UiLCJpbm5lckhUTUwiLCJpbnNlcnRBZGphY2VudEhUTUwiXSwibWFwcGluZ3MiOiJPQUFPLE1BQU1BLGFBQ1RDLGNBQ0lDLEtBQUtDLE9BQVNDLFNBQVNDLGNBQWMscUJBQ3JDSCxLQUFLSSxLQUFPRixTQUFTQyxjQUFjLGlCQUNuQ0gsS0FBS0ssTUFBUSxLQUNiTCxLQUFLTSxXQUFhSixTQUFTQyxjQUFjLGdCQUN6Q0gsS0FBS08sU0FBV0wsU0FBU0MsY0FBYyxpQkFBaUJLLFdBRzVEVCxPQUNJLEdBQUdVLE9BQU9ULEtBQUtDLFFBQVMsQ0FDcEJELEtBQUtLLE1BQVFMLEtBQUtDLE9BQU9TLGlCQUFpQixNQUUxQyxJQUFJLElBQUlDLEVBQUksRUFBR0MsRUFBTVosS0FBS0ssTUFBTVEsT0FBUUYsRUFBSUMsRUFBS0QsSUFDN0NYLEtBQUtLLE1BQU1NLEdBQUdHLGlCQUFpQkMsV0FBVyxLQUd0QyxJQUFJLElBQUlDLEVBQUksRUFBR0osRUFBTVosS0FBS0ssTUFBTVEsT0FBUUcsRUFBSUosRUFBS0ksSUFDN0NoQixLQUFLSyxNQUFNVyxHQUFHQyxVQUFVQyxPQUFPLFVBSW5DLElBQUlDLEVBQVduQixLQUFLSyxNQUFNTSxHQUFHUixjQUFjLEtBQUtpQixhQUFhLGdCQUU3RHBCLEtBQUtLLE1BQU1NLEdBQUdNLFVBQVVJLElBQUksVUFDNUJDLEtBQUssV0FBYUgsR0FDYkksTUFBTUMsSUFFSCxJQUFJQyxFQUFLQyxLQUFLQyxTQUFTLENBQUNDLE9BQVEsSUFDaENILEVBQUdJLEdBQUcsQ0FBQzdCLEtBQUtJLE1BQU8sQ0FBQzBCLFVBQVcsRUFBR0MsU0FBVSxJQUFNQyxLQUFNLGtCQUFtQixTQUczRVAsRUFBR0osS0FBSSxLQUNIckIsS0FBS0ksS0FBSzZCLFVBQVlULEtBSTFCQyxFQUFHSSxHQUFHLENBQUM3QixLQUFLSSxNQUFPLENBQUMwQixVQUFXLEVBQUdDLFNBQVUsSUFBTUMsS0FBTSxpQkFBa0IsWUFJbEZWLEtBQUssaUJBQW1CSCxHQUNuQkksTUFBTUMsSUFDSHhCLEtBQUtPLFNBQVNXLFNBQ2RsQixLQUFLTSxXQUFXNEIsbUJBQW1CLGFBQWNWLEdBQ2pEeEIsS0FBS08sU0FBV0wsU0FBU0MsY0FBYyxpQkFBaUJLIiwiZmlsZSI6InN0YXRpYy9sYW5nc3dpdGNoZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgTGFuZ1N3aXRjaGVyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5wYXJlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubmF2aWdhdGlvbl9fbGFuZycpO1xuICAgICAgICB0aGlzLm1lbnUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaGVhZGVyX19tZW51Jyk7XG4gICAgICAgIHRoaXMubGlua3MgPSBudWxsO1xuICAgICAgICB0aGlzLmxvZ29QYXJlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaGVhZGVyX19iYXInKTtcbiAgICAgICAgdGhpcy5sb2dvbGluayA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5oZWFkZXJfX2xvZ28nKS5wYXJlbnROb2RlO1xuICAgIH1cblxuICAgIGluaXQoKSB7XG4gICAgICAgIGlmKGV4aXN0cyh0aGlzLnBhcmVudCkpIHtcbiAgICAgICAgICAgIHRoaXMubGlua3MgPSB0aGlzLnBhcmVudC5xdWVyeVNlbGVjdG9yQWxsKCdsaScpO1xuXG4gICAgICAgICAgICBmb3IobGV0IGkgPSAwLCBsZW4gPSB0aGlzLmxpbmtzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5saW5rc1tpXS5hZGRFdmVudExpc3RlbmVyKGZhc3RDbGljaywgKCkgPT4ge1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIENoYW5nZSBhY3RpdmUgY2xhc3Mgb24gbGlua3NcbiAgICAgICAgICAgICAgICAgICAgZm9yKGxldCB4ID0gMCwgbGVuID0gdGhpcy5saW5rcy5sZW5ndGg7IHggPCBsZW47IHgrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5saW5rc1t4XS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIC8vIE1ha2UgQWpheCBjYWxsIHRvIGdldCB0aGUgbWVudSBkZXBlbmRpbmcgb24gdGhlIHRhcmdldCBsYW5ndWFnZVxuICAgICAgICAgICAgICAgICAgICBsZXQgbGFuZ0NvZGUgPSB0aGlzLmxpbmtzW2ldLnF1ZXJ5U2VsZWN0b3IoJ2EnKS5nZXRBdHRyaWJ1dGUoJ2RhdGEtbGFuZy1pZCcpO1xuXG4gICAgICAgICAgICAgICAgICAgIHRoaXMubGlua3NbaV0uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XG4gICAgICAgICAgICAgICAgICAgIGFqYXgoJ2dldE1lbnU9JyArIGxhbmdDb2RlKVxuICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4oKGFuc3dlcikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEFuaW1hdGUgb2xkIG1lbnUgb3V0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHRsID0gZ3NhcC50aW1lbGluZSh7cmVwZWF0OiAwfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGwudG8oW3RoaXMubWVudV0sIHthdXRvQWxwaGE6IDAsIGR1cmF0aW9uOiAwLjM1LCBlYXNlOiAnUG93ZXIzLmVhc2VPdXQnfSwgXCIrPTAuMFwiKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEluc2VydCB0aGUgbmV3IE1lbnVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bC5hZGQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1lbnUuaW5uZXJIVE1MID0gYW5zd2VyO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQW5pbWF0ZSBuZXcgbWVudSBpblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRsLnRvKFt0aGlzLm1lbnVdLCB7YXV0b0FscGhhOiAxLCBkdXJhdGlvbjogMC4zNSwgZWFzZTogJ1Bvd2VyMy5lYXNlSW4nfSwgXCIrPTAuMFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIE1ha2UgYWpheCBjYWxsIHRvIGdldCB0aGUgdXBkYXRlZCBsb2dvIHdpdGggbGlua1xuICAgICAgICAgICAgICAgICAgICBhamF4KCdnZXRIZWFkZXJMb2dvPScgKyBsYW5nQ29kZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIC50aGVuKChhbnN3ZXIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmxvZ29saW5rLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubG9nb1BhcmVudC5pbnNlcnRBZGphY2VudEhUTUwoJ2FmdGVyYmVnaW4nLCBhbnN3ZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubG9nb2xpbmsgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaGVhZGVyX19sb2dvJykucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufSJdfQ==
