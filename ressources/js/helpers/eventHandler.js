export class EventHandler{constructor(){this.triggers=document.querySelectorAll("[data-js]")}init(){for(let t=0,e=this.triggers.length;t<e;t++){let e=this.triggers[t];if(null===e.getAttribute("data-js-assigned")){let t=e.getAttribute("data-js-mode"),s=e.getAttribute("data-js-listener"),r=e.getAttribute("data-js-selector"),a=e.getAttribute("data-js-target");t=null!==t?t:"toggle",s=null!==s?s:"click",r=null!==r?r:"active",a=null!==a&&exists(document.querySelector(a))?document.querySelector(a):e,"click"===s&&(s=fastClick),e.addEventListener(s,(()=>{switch(t){case"add":a.classList.add(r);break;case"remove":a.classList.remove(r);break;default:a.classList.toggle(r)}})),e.setAttribute("data-js-assigned","true")}}}update(){this.triggers=document.querySelectorAll("[data-js]"),this.init()}}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHBlcnMvZXZlbnRIYW5kbGVyLmpzIl0sIm5hbWVzIjpbIkV2ZW50SGFuZGxlciIsIltvYmplY3QgT2JqZWN0XSIsInRoaXMiLCJ0cmlnZ2VycyIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsImkiLCJsZW4iLCJsZW5ndGgiLCJ0cmlnZ2VyIiwiZ2V0QXR0cmlidXRlIiwibW9kZSIsImxpc3RlbmVyIiwic2VsZWN0b3IiLCJ0YXJnZXQiLCJleGlzdHMiLCJxdWVyeVNlbGVjdG9yIiwiZmFzdENsaWNrIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsInRvZ2dsZSIsInNldEF0dHJpYnV0ZSIsImluaXQiXSwibWFwcGluZ3MiOiJPQUFPLE1BQU1BLGFBQ1RDLGNBQ0lDLEtBQUtDLFNBQVdDLFNBQVNDLGlCQUFpQixhQUc5Q0osT0FDSSxJQUFJLElBQUlLLEVBQUksRUFBR0MsRUFBTUwsS0FBS0MsU0FBU0ssT0FBUUYsRUFBSUMsRUFBS0QsSUFBSyxDQUNyRCxJQUFJRyxFQUFVUCxLQUFLQyxTQUFTRyxHQUk1QixHQUFnQixPQUhERyxFQUFRQyxhQUFhLG9CQUdkLENBRWxCLElBQUlDLEVBQU9GLEVBQVFDLGFBQWEsZ0JBQzVCRSxFQUFXSCxFQUFRQyxhQUFhLG9CQUNoQ0csRUFBV0osRUFBUUMsYUFBYSxvQkFDaENJLEVBQVNMLEVBQVFDLGFBQWEsa0JBU2xDQyxFQUFnQixPQUFUQSxFQUFnQkEsRUFBTyxTQUM5QkMsRUFBd0IsT0FBYkEsRUFBb0JBLEVBQVcsUUFDMUNDLEVBQXdCLE9BQWJBLEVBQW9CQSxFQUFXLFNBQzFDQyxFQUFvQixPQUFYQSxHQUFrQkMsT0FBT1gsU0FBU1ksY0FBY0YsSUFBV1YsU0FBU1ksY0FBY0YsR0FBb0JMLEVBRy9GLFVBQWJHLElBQ0NBLEVBQVdLLFdBRWZSLEVBQVFTLGlCQUFpQk4sR0FBVSxLQUMvQixPQUFPRCxHQUNILElBQUssTUFDREcsRUFBT0ssVUFBVUMsSUFBSVAsR0FDckIsTUFDSixJQUFLLFNBQ0RDLEVBQU9LLFVBQVVFLE9BQU9SLEdBQ3hCLE1BQ0osUUFDSUMsRUFBT0ssVUFBVUcsT0FBT1QsT0FNcENKLEVBQVFjLGFBQWEsbUJBQW9CLFVBS3JEdEIsU0FDSUMsS0FBS0MsU0FBV0MsU0FBU0MsaUJBQWlCLGFBQzFDSCxLQUFLc0IiLCJmaWxlIjoiaGVscGVycy9ldmVudEhhbmRsZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgRXZlbnRIYW5kbGVyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy50cmlnZ2VycyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLWpzXScpO1xuICAgIH1cblxuICAgIGluaXQoKSB7XG4gICAgICAgIGZvcihsZXQgaSA9IDAsIGxlbiA9IHRoaXMudHJpZ2dlcnMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgIGxldCB0cmlnZ2VyID0gdGhpcy50cmlnZ2Vyc1tpXTtcbiAgICAgICAgICAgIGxldCBhc3NpZ25lZCA9IHRyaWdnZXIuZ2V0QXR0cmlidXRlKCdkYXRhLWpzLWFzc2lnbmVkJyk7XG5cbiAgICAgICAgICAgIC8vIEZpcnN0IGNoZWNrIGlmIGxpc3RlbmVyIGlzIGFscmVhZHkgYXNzaWduZWRcbiAgICAgICAgICAgIGlmKGFzc2lnbmVkID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgLy8gR2V0IFNldHRpbmdzXG4gICAgICAgICAgICAgICAgbGV0IG1vZGUgPSB0cmlnZ2VyLmdldEF0dHJpYnV0ZSgnZGF0YS1qcy1tb2RlJyk7ICAgICAgICAgICAgICAgIC8vIGFkZCwgdG9nZ2xlLCByZW1vdmVcbiAgICAgICAgICAgICAgICBsZXQgbGlzdGVuZXIgPSB0cmlnZ2VyLmdldEF0dHJpYnV0ZSgnZGF0YS1qcy1saXN0ZW5lcicpO1xuICAgICAgICAgICAgICAgIGxldCBzZWxlY3RvciA9IHRyaWdnZXIuZ2V0QXR0cmlidXRlKCdkYXRhLWpzLXNlbGVjdG9yJyk7XG4gICAgICAgICAgICAgICAgbGV0IHRhcmdldCA9IHRyaWdnZXIuZ2V0QXR0cmlidXRlKCdkYXRhLWpzLXRhcmdldCcpO1xuXG4gICAgICAgICAgICAgICAgLyogIENoZWNrIHNldHRpbmdzIGFuZCBzZXQgZGVmYXVsdHMgaWYgbmVlZGVkXG4gICAgICAgICAgICAgICAgKiAgIGRlZmF1bHQgQG1vZGUgPSB0b2dnbGVcbiAgICAgICAgICAgICAgICAqICAgZGVmYXVsdCBAbGlzdGVuZXIgPSBjbGlja1xuICAgICAgICAgICAgICAgICogICBkZWZhdWx0IEBzZWxlY3RvciA9IC5hY3RpdmVcbiAgICAgICAgICAgICAgICAqICAgZGVmYXVsdCBAdGFyZ2V0ID0gdHJpZ2dlclxuICAgICAgICAgICAgICAgICovXG5cbiAgICAgICAgICAgICAgICBtb2RlID0gbW9kZSAhPT0gbnVsbCA/IG1vZGUgOiAndG9nZ2xlJztcbiAgICAgICAgICAgICAgICBsaXN0ZW5lciA9IGxpc3RlbmVyICE9PSBudWxsID8gbGlzdGVuZXIgOiAnY2xpY2snO1xuICAgICAgICAgICAgICAgIHNlbGVjdG9yID0gc2VsZWN0b3IgIT09IG51bGwgPyBzZWxlY3RvciA6ICdhY3RpdmUnO1xuICAgICAgICAgICAgICAgIHRhcmdldCA9IHRhcmdldCAhPT0gbnVsbCA/IGV4aXN0cyhkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCkpID8gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpIDogdHJpZ2dlciA6IHRyaWdnZXI7XG5cbiAgICAgICAgICAgICAgICAvLyBBZGQgbGlzdGVuZXIgdG8gZWxlbWVudFxuICAgICAgICAgICAgICAgIGlmKGxpc3RlbmVyID09PSAnY2xpY2snKSB7XG4gICAgICAgICAgICAgICAgICAgIGxpc3RlbmVyID0gZmFzdENsaWNrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0cmlnZ2VyLmFkZEV2ZW50TGlzdGVuZXIobGlzdGVuZXIsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgc3dpdGNoKG1vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ2FkZCc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0LmNsYXNzTGlzdC5hZGQoc2VsZWN0b3IpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAncmVtb3ZlJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQuY2xhc3NMaXN0LnJlbW92ZShzZWxlY3Rvcik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldC5jbGFzc0xpc3QudG9nZ2xlKHNlbGVjdG9yKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgLy8gU2V0IGF0dHJpYnV0ZSBhc3NpZ25lZCB0byBlbGVtZW50IHRvIHByZXZlbnQgbXVsdGlwbGUgYXNzaWdubWVudCBvbiBlbGVtZW50c1xuICAgICAgICAgICAgICAgIHRyaWdnZXIuc2V0QXR0cmlidXRlKCdkYXRhLWpzLWFzc2lnbmVkJywgJ3RydWUnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHVwZGF0ZSgpIHtcbiAgICAgICAgdGhpcy50cmlnZ2VycyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLWpzXScpO1xuICAgICAgICB0aGlzLmluaXQoKTtcbiAgICB9XG59Il19
