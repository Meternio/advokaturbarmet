export class NewsHandler{constructor(){this.triggers=document.querySelectorAll(".blog__more")}offset(e){let t=e.getBoundingClientRect(),o=window.pageXOffset||document.documentElement.scrollLeft,i=window.pageYOffset||document.documentElement.scrollTop;return{top:t.top+i,left:t.left+o}}init(){for(let e=0,t=this.triggers.length;e<t;e++)this.triggers[e].addEventListener("click",(()=>{let t=this.triggers[e].closest(".blog__post"),o=t.querySelector(".blog__content"),i=t.classList.contains("closed"),s=i?o.scrollHeight:0,r=i?0:.2,l=i&&Client.windowWidth<=768?this.offset(o).top:this.offset(t).top;if(gsap.timeline({repeat:0}).to(window,{duration:1,scrollTo:{y:l},ease:"power3.inOut"},`+=${r}`),Client.windowWidth<769){let t=gsap.timeline({repeat:0});t.to([this.triggers[e]],{autoAlpha:0,ease:"power3.inOut",duration:.1},"+=0"),t.to([o],{maxHeight:s,ease:"power3.inOut",duration:1},`+=${r}`),t.to([this.triggers[e]],{autoAlpha:1,ease:"power3.inOut",duration:.25},"+=0")}else{gsap.timeline({repeat:0}).to([o],{maxHeight:s,ease:"power3.inOut",duration:1},`+=${r}`)}i?t.classList.remove("closed"):t.classList.add("closed")}))}update(){this.triggers=document.querySelectorAll(".blog__more"),this.init()}}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImR5bmFtaWMvbmV3cy5qcyJdLCJuYW1lcyI6WyJOZXdzSGFuZGxlciIsIltvYmplY3QgT2JqZWN0XSIsInRoaXMiLCJ0cmlnZ2VycyIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsImVsIiwicmVjdCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInNjcm9sbExlZnQiLCJ3aW5kb3ciLCJwYWdlWE9mZnNldCIsImRvY3VtZW50RWxlbWVudCIsInNjcm9sbFRvcCIsInBhZ2VZT2Zmc2V0IiwidG9wIiwibGVmdCIsImkiLCJsZW4iLCJsZW5ndGgiLCJhZGRFdmVudExpc3RlbmVyIiwicGFyZW50IiwiY2xvc2VzdCIsImNvbnRlbnQiLCJxdWVyeVNlbGVjdG9yIiwiaXNDbG9zZWQiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsImFuaW1hdGVUbyIsInNjcm9sbEhlaWdodCIsImRlbGF5IiwiQ2xpZW50Iiwid2luZG93V2lkdGgiLCJvZmZzZXQiLCJnc2FwIiwidGltZWxpbmUiLCJyZXBlYXQiLCJ0byIsImR1cmF0aW9uIiwic2Nyb2xsVG8iLCJ5IiwiZWFzZSIsInRsIiwiYXV0b0FscGhhIiwibWF4SGVpZ2h0IiwicmVtb3ZlIiwiYWRkIiwiaW5pdCJdLCJtYXBwaW5ncyI6Ik9BQU8sTUFBTUEsWUFDVEMsY0FDSUMsS0FBS0MsU0FBV0MsU0FBU0MsaUJBQWlCLGVBRzlDSixPQUFPSyxHQUNILElBQUlDLEVBQU9ELEVBQUdFLHdCQUNWQyxFQUFhQyxPQUFPQyxhQUFlUCxTQUFTUSxnQkFBZ0JILFdBQzVESSxFQUFZSCxPQUFPSSxhQUFlVixTQUFTUSxnQkFBZ0JDLFVBQy9ELE1BQU8sQ0FBRUUsSUFBS1IsRUFBS1EsSUFBTUYsRUFBV0csS0FBTVQsRUFBS1MsS0FBT1AsR0FHMURSLE9BQ0ksSUFBSyxJQUFJZ0IsRUFBSSxFQUFHQyxFQUFNaEIsS0FBS0MsU0FBU2dCLE9BQVFGLEVBQUlDLEVBQUtELElBRWpEZixLQUFLQyxTQUFTYyxHQUFHRyxpQkFBaUIsU0FBUyxLQUN2QyxJQUFJQyxFQUFTbkIsS0FBS0MsU0FBU2MsR0FBR0ssUUFBUSxlQUNsQ0MsRUFBVUYsRUFBT0csY0FBYyxrQkFDL0JDLEVBQVdKLEVBQU9LLFVBQVVDLFNBQVMsVUFDckNDLEVBQVlILEVBQVdGLEVBQVFNLGFBQWUsRUFDOUNDLEVBQVFMLEVBQVcsRUFBSSxHQUd2QlosRUFBWVksR0FBV00sT0FBT0MsYUFBZSxJQUFNOUIsS0FBSytCLE9BQU9WLEdBQVNSLElBQWdDYixLQUFLK0IsT0FBT1osR0FBUU4sSUFLaEksR0FIZW1CLEtBQUtDLFNBQVMsQ0FBQ0MsT0FBUSxJQUM3QkMsR0FBRzNCLE9BQVEsQ0FBQzRCLFNBQVUsRUFBR0MsU0FBVSxDQUFDQyxFQUFHM0IsR0FBWTRCLEtBQU0sZ0JBQWlCLEtBQUtYLEtBRXJGQyxPQUFPQyxZQUFjLElBQUssQ0FDekIsSUFBSVUsRUFBS1IsS0FBS0MsU0FBUyxDQUFDQyxPQUFRLElBQ2hDTSxFQUFHTCxHQUFHLENBQUNuQyxLQUFLQyxTQUFTYyxJQUFLLENBQUMwQixVQUFXLEVBQUdGLEtBQU0sZUFBZ0JILFNBQVUsSUFBTSxPQUMvRUksRUFBR0wsR0FBRyxDQUFDZCxHQUFVLENBQUNxQixVQUFXaEIsRUFBV2EsS0FBTSxlQUFnQkgsU0FBVSxHQUFJLEtBQUtSLEtBQ2pGWSxFQUFHTCxHQUFHLENBQUNuQyxLQUFLQyxTQUFTYyxJQUFLLENBQUMwQixVQUFXLEVBQUdGLEtBQU0sZUFBZ0JILFNBQVUsS0FBTyxXQUM5RSxDQUNPSixLQUFLQyxTQUFTLENBQUNDLE9BQVEsSUFDN0JDLEdBQUcsQ0FBQ2QsR0FBVSxDQUFDcUIsVUFBV2hCLEVBQVdhLEtBQU0sZUFBZ0JILFNBQVUsR0FBSSxLQUFLUixLQUdsRkwsRUFDQ0osRUFBT0ssVUFBVW1CLE9BQU8sVUFFeEJ4QixFQUFPSyxVQUFVb0IsSUFBSSxhQU1yQzdDLFNBQ0lDLEtBQUtDLFNBQVdDLFNBQVNDLGlCQUFpQixlQUMxQ0gsS0FBSzZDIiwiZmlsZSI6ImR5bmFtaWMvbmV3cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBOZXdzSGFuZGxlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMudHJpZ2dlcnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYmxvZ19fbW9yZScpO1xuICAgIH1cblxuICAgIG9mZnNldChlbCkge1xuICAgICAgICBsZXQgcmVjdCA9IGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLFxuICAgICAgICAgICAgc2Nyb2xsTGVmdCA9IHdpbmRvdy5wYWdlWE9mZnNldCB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsTGVmdCxcbiAgICAgICAgICAgIHNjcm9sbFRvcCA9IHdpbmRvdy5wYWdlWU9mZnNldCB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wO1xuICAgICAgICByZXR1cm4geyB0b3A6IHJlY3QudG9wICsgc2Nyb2xsVG9wLCBsZWZ0OiByZWN0LmxlZnQgKyBzY3JvbGxMZWZ0IH1cbiAgICB9XG5cbiAgICBpbml0KCkge1xuICAgICAgICBmb3IgKGxldCBpID0gMCwgbGVuID0gdGhpcy50cmlnZ2Vycy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuXG4gICAgICAgICAgICB0aGlzLnRyaWdnZXJzW2ldLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBwYXJlbnQgPSB0aGlzLnRyaWdnZXJzW2ldLmNsb3Nlc3QoJy5ibG9nX19wb3N0Jyk7XG4gICAgICAgICAgICAgICAgbGV0IGNvbnRlbnQgPSBwYXJlbnQucXVlcnlTZWxlY3RvcignLmJsb2dfX2NvbnRlbnQnKTtcbiAgICAgICAgICAgICAgICBsZXQgaXNDbG9zZWQgPSBwYXJlbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdjbG9zZWQnKTtcbiAgICAgICAgICAgICAgICBsZXQgYW5pbWF0ZVRvID0gaXNDbG9zZWQgPyBjb250ZW50LnNjcm9sbEhlaWdodCA6IDA7XG4gICAgICAgICAgICAgICAgbGV0IGRlbGF5ID0gaXNDbG9zZWQgPyAwIDogMC4yO1xuXG5cbiAgICAgICAgICAgICAgICBsZXQgc2Nyb2xsVG9wID0gaXNDbG9zZWQgPyBDbGllbnQud2luZG93V2lkdGggPD0gNzY4ID8gdGhpcy5vZmZzZXQoY29udGVudCkudG9wIDogdGhpcy5vZmZzZXQocGFyZW50KS50b3AgOiB0aGlzLm9mZnNldChwYXJlbnQpLnRvcDtcblxuICAgICAgICAgICAgICAgIGxldCBzY3JvbGxUbCA9IGdzYXAudGltZWxpbmUoe3JlcGVhdDogMH0pO1xuICAgICAgICAgICAgICAgIHNjcm9sbFRsLnRvKHdpbmRvdywge2R1cmF0aW9uOiAxLCBzY3JvbGxUbzoge3k6IHNjcm9sbFRvcH0sIGVhc2U6IFwicG93ZXIzLmluT3V0XCJ9LCBgKz0ke2RlbGF5fWApO1xuXG4gICAgICAgICAgICAgICAgaWYoQ2xpZW50LndpbmRvd1dpZHRoIDwgNzY5KSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCB0bCA9IGdzYXAudGltZWxpbmUoe3JlcGVhdDogMH0pO1xuICAgICAgICAgICAgICAgICAgICB0bC50byhbdGhpcy50cmlnZ2Vyc1tpXV0sIHthdXRvQWxwaGE6IDAsIGVhc2U6IFwicG93ZXIzLmluT3V0XCIsIGR1cmF0aW9uOiAwLjF9LCBgKz0wYCk7XG4gICAgICAgICAgICAgICAgICAgIHRsLnRvKFtjb250ZW50XSwge21heEhlaWdodDogYW5pbWF0ZVRvLCBlYXNlOiBcInBvd2VyMy5pbk91dFwiLCBkdXJhdGlvbjogMX0sIGArPSR7ZGVsYXl9YCk7XG4gICAgICAgICAgICAgICAgICAgIHRsLnRvKFt0aGlzLnRyaWdnZXJzW2ldXSwge2F1dG9BbHBoYTogMSwgZWFzZTogXCJwb3dlcjMuaW5PdXRcIiwgZHVyYXRpb246IDAuMjV9LCBgKz0wYCk7XG4gICAgICAgICAgICAgICAgfWVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBsZXQgdGwgPSBnc2FwLnRpbWVsaW5lKHtyZXBlYXQ6IDB9KTtcbiAgICAgICAgICAgICAgICAgICAgdGwudG8oW2NvbnRlbnRdLCB7bWF4SGVpZ2h0OiBhbmltYXRlVG8sIGVhc2U6IFwicG93ZXIzLmluT3V0XCIsIGR1cmF0aW9uOiAxfSwgYCs9JHtkZWxheX1gKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZihpc0Nsb3NlZCkge1xuICAgICAgICAgICAgICAgICAgICBwYXJlbnQuY2xhc3NMaXN0LnJlbW92ZSgnY2xvc2VkJyk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcGFyZW50LmNsYXNzTGlzdC5hZGQoJ2Nsb3NlZCcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgdXBkYXRlKCkge1xuICAgICAgICB0aGlzLnRyaWdnZXJzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmJsb2dfX21vcmUnKTtcbiAgICAgICAgdGhpcy5pbml0KCk7XG4gICAgfVxufSJdfQ==
